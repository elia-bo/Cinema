// <auto-generated />
using System;
using Cinema.DataBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cinema.Domain.Biglietto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fila")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("IdFilm")
                        .HasColumnType("int");

                    b.Property<int?>("IdSpettatore")
                        .HasColumnType("int");

                    b.Property<int>("Posto")
                        .HasColumnType("int");

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdFilm");

                    b.ToTable("Biglietti");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fila = "A",
                            Posto = 5,
                            Prezzo = 20.0
                        },
                        new
                        {
                            Id = 2,
                            Fila = "G",
                            Posto = 7,
                            Prezzo = 13.0
                        },
                        new
                        {
                            Id = 3,
                            Fila = "D",
                            Posto = 2,
                            Prezzo = 17.0
                        });
                });

            modelBuilder.Entity("Cinema.Domain.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<int>("Genere")
                        .HasColumnType("int");

                    b.Property<string>("Produttore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitoloFilm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Film");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autore = "Cesare",
                            Durata = 200,
                            Genere = 0,
                            Produttore = "Alberto",
                            TitoloFilm = "Matrix"
                        },
                        new
                        {
                            Id = 2,
                            Autore = "Gino",
                            Durata = 150,
                            Genere = 3,
                            Produttore = "Giacomo",
                            TitoloFilm = "Top Gun"
                        },
                        new
                        {
                            Id = 3,
                            Autore = "Luca",
                            Durata = 190,
                            Genere = 1,
                            Produttore = "Paolo",
                            TitoloFilm = "Scream"
                        });
                });

            modelBuilder.Entity("Cinema.Domain.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdFilmInCorso")
                        .HasColumnType("int");

                    b.Property<int>("MaxNumSpettatori")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFilmInCorso")
                        .IsUnique()
                        .HasFilter("[IdFilmInCorso] IS NOT NULL");

                    b.ToTable("Sale");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxNumSpettatori = 200
                        },
                        new
                        {
                            Id = 2,
                            MaxNumSpettatori = 300
                        });
                });

            modelBuilder.Entity("Cinema.Domain.Spettatore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("date");

                    b.Property<int>("Eta")
                        .HasColumnType("int");

                    b.Property<int?>("IdBiglietto")
                        .HasColumnType("int");

                    b.Property<bool>("Maggiorenne")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBiglietto")
                        .IsUnique()
                        .HasFilter("[IdBiglietto] IS NOT NULL");

                    b.HasIndex("SalaId");

                    b.ToTable("Spettatori");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cognome = "Alby",
                            DataNascita = new DateTime(2014, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Eta = 8,
                            Maggiorenne = false,
                            Nome = "Alberto"
                        },
                        new
                        {
                            Id = 2,
                            Cognome = "Gallo",
                            DataNascita = new DateTime(1980, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Eta = 42,
                            Maggiorenne = true,
                            Nome = "Mario"
                        },
                        new
                        {
                            Id = 3,
                            Cognome = "Gallo",
                            DataNascita = new DateTime(1970, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Eta = 52,
                            Maggiorenne = true,
                            Nome = "Giacomo"
                        });
                });

            modelBuilder.Entity("Cinema.Domain.Biglietto", b =>
                {
                    b.HasOne("Cinema.Domain.Film", "Film")
                        .WithMany("Biglietti")
                        .HasForeignKey("IdFilm");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Cinema.Domain.Sala", b =>
                {
                    b.HasOne("Cinema.Domain.Film", "FilmInCorso")
                        .WithOne("Sala")
                        .HasForeignKey("Cinema.Domain.Sala", "IdFilmInCorso");

                    b.Navigation("FilmInCorso");
                });

            modelBuilder.Entity("Cinema.Domain.Spettatore", b =>
                {
                    b.HasOne("Cinema.Domain.Biglietto", "Biglietto")
                        .WithOne("Spettatore")
                        .HasForeignKey("Cinema.Domain.Spettatore", "IdBiglietto");

                    b.HasOne("Cinema.Domain.Sala", "Sala")
                        .WithMany("Spettatori")
                        .HasForeignKey("SalaId");

                    b.Navigation("Biglietto");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Cinema.Domain.Biglietto", b =>
                {
                    b.Navigation("Spettatore");
                });

            modelBuilder.Entity("Cinema.Domain.Film", b =>
                {
                    b.Navigation("Biglietti");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Cinema.Domain.Sala", b =>
                {
                    b.Navigation("Spettatori");
                });
#pragma warning restore 612, 618
        }
    }
}
